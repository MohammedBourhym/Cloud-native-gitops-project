name: Command Buddy CI/CD - Testing & Quality

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'src/**'
      - 'pom.xml'
      - '**.java'
  pull_request:
    branches:
      - main
    paths:
      - 'src/**'
      - 'pom.xml'
      - '**.java'
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: command-buddy
  EKS_CLUSTER: gitops-eks

jobs:
  code-quality:
    name: "Code Quality & Testing"
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Maven Tests
        run: |
          echo "Running unit tests for Command Buddy..."
          mvn clean test

      - name: Run Checkstyle Analysis
        run: |
          echo "Running code style analysis..."
          mvn checkstyle:checkstyle

      - name: Generate Test Reports
        run: |
          echo "Generating test coverage reports..."
          mvn jacoco:report

      # Setup SonarQube Scanner
      - name: Setup SonarQube Scanner
        uses: warchant/setup-sonar-scanner@v7

      # Run SonarQube Analysis
      - name: SonarQube Code Analysis
        run: |
          sonar-scanner \
            -Dsonar.host.url=${{ secrets.SONAR_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.projectName="Command Buddy" \
            -Dsonar.projectVersion="1.0" \
            -Dsonar.sources=src/main/java \
            -Dsonar.tests=src/test/java \
            -Dsonar.junit.reportsPath=target/surefire-reports/ \
            -Dsonar.jacoco.reportsPath=target/site/jacoco/jacoco.xml \
            -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.java.test.binaries=target/test-classes

      # Quality Gate Check
      - name: SonarQube Quality Gate Check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_URL }}

      - name: Quality Gate Status
        run: |
          if [ "${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}" = "FAILED" ]; then
            echo "❌ Quality Gate failed! Code quality issues detected."
            echo "Please check SonarQube dashboard for details."
            exit 1
          else
            echo "✅ Quality Gate passed! Code meets quality standards."
          fi

      # Upload test results as artifacts
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: |
            target/surefire-reports/
            target/checkstyle-result.xml
            target/site/jacoco/

      - name: Upload Coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v3
        with:
          file: target/site/jacoco/jacoco.xml
          flags: unittests
          name: command-buddy-coverage
          fail_ci_if_error: false